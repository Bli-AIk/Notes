@startuml
namespace Avalonia.Markup.Xaml {
    class AvaloniaRuntimeXamlLoader {
        + Load1(xaml: string, localAssembly: Assembly, rootInstance: object, uri: Uri, designMode: bool)
        + Load2(stream: Stream, localAssembly: Assembly, rootInstance: object, uri: Uri, designMode: bool)
        + Load3(document: RuntimeXamlLoaderDocument, configuration: RuntimeXamlLoaderConfiguration)
    }

    class RuntimeXamlLoaderDocument {
        + BaseUri: Uri?
        + RootInstance: object?
        + XamlStream: Stream
        + ServiceProvider: IServiceProvider?
    }

    class RuntimeXamlLoaderConfiguration {
        + LocalAssembly: Assembly?
        + UseCompiledBindingsByDefault: bool = false
        + DesignMode: bool = false
        + DiagnosticHandler: XamlDiagnosticFunc?
        + XamlDiagnosticFunc(int line, int position, string message)
    }

    AvaloniaRuntimeXamlLoader ..> RuntimeXamlLoaderDocument
    AvaloniaRuntimeXamlLoader ..> RuntimeXamlLoaderConfiguration
    RuntimeXamlLoaderConfiguration ..> XamlDiagnosticFunc
}

' 建立伪节点代表方法
entity AvaloniaRuntimeXamlLoader_Load1 {
  var stream = new MemoryStream(Encoding.UTF8.GetBytes(xaml));
}
entity AvaloniaRuntimeXamlLoader_Load2 {
  new RuntimeXamlLoaderDocument(uri, rootInstance, stream)
  new RuntimeXamlLoaderConfiguration { DesignMode = designMode, LocalAssembly = localAssembly }
}
entity AvaloniaRuntimeXamlLoader_Load3
entity AvaloniaXamlIlRuntimeCompiler_Load
entity AvaloniaXamlIlRuntimeCompiler_LoadCecil
entity AvaloniaXamlIlRuntimeCompiler_LoadSre
entity AvaloniaXamlIlRuntimeCompiler_LoadSreCore
entity AvaloniaXamlIlRuntimeCompiler_LoadGroupSreCore

' 隐藏连线，把伪节点放到类方法对应的位置
Avalonia.Markup.Xaml.AvaloniaRuntimeXamlLoader::Load1 -[hidden]- AvaloniaRuntimeXamlLoader_Load1
Avalonia.Markup.Xaml.AvaloniaRuntimeXamlLoader::Load2 -[hidden]- AvaloniaRuntimeXamlLoader_Load2
Avalonia.Markup.Xaml.AvaloniaRuntimeXamlLoader::Load3 -[hidden]- AvaloniaRuntimeXamlLoader_Load3
Avalonia.Markup.Xaml.XamlIl.AvaloniaXamlIlRuntimeCompiler::Load -[hidden]- AvaloniaXamlIlRuntimeCompiler_Load

' 实际箭头
AvaloniaRuntimeXamlLoader_Load1 --> AvaloniaRuntimeXamlLoader_Load2 : 调用
AvaloniaRuntimeXamlLoader_Load2 --> AvaloniaXamlIlRuntimeCompiler_Load : 调用
AvaloniaRuntimeXamlLoader_Load3 --> AvaloniaXamlIlRuntimeCompiler_Load : 调用
AvaloniaXamlIlRuntimeCompiler_Load --> AvaloniaXamlIlRuntimeCompiler_LoadCecil : if RUNTIME_XAML_CECIL
AvaloniaXamlIlRuntimeCompiler_Load --> AvaloniaXamlIlRuntimeCompiler_LoadSre : else
AvaloniaXamlIlRuntimeCompiler_LoadSre --> AvaloniaXamlIlRuntimeCompiler_LoadSreCore
AvaloniaXamlIlRuntimeCompiler_LoadSreCore --> AvaloniaXamlIlRuntimeCompiler_LoadGroupSreCore

note right of AvaloniaRuntimeXamlLoader
  Load方法重载都包含RequiresUnreferencedCode,
  其提示信息为:
  XamlX.TrimmingMessages.DynamicXamlReference =
  "x:Class directive type and XAML dependencies are referenced dynamically and might be trimmed."
end note

note as N1
  RequiresUnreferencedCode 是 .NET（尤其是 .NET 5+ 和 .NET 6/7/8）中的一个 特性（attribute），
  用于标记某些方法或成员 在链接器（IL Linker / Trim）裁剪代码时不安全，
  也就是说，这些代码 依赖于反射或动态访问，裁剪时可能被移除，导致运行时错误。
end note

note right of AvaloniaXamlIlRuntimeCompiler_Load
  Load方法中，
  会检测是否启用RUNTIME_XAML_CECIL。
  如果启用，则 return LoadCecil
  (xaml, configuration.LocalAssembly, 
  document.RootInstance, document.BaseUri, 
  configuration.UseCompiledBindingsByDefault);
  否则，
  return LoadSre(document, configuration);
end note

package Avalonia.Markup.Xaml.XamlIl {
    class AvaloniaXamlIlRuntimeCompiler {
        + Load(document: RuntimeXamlLoaderDocument, configuration: RuntimeXamlLoaderConfiguration)
        + LoadSre(document: RuntimeXamlLoaderDocument, configuration: RuntimeXamlLoaderConfiguration)
        + LoadSreCore(document: RuntimeXamlLoaderDocument, configuration: RuntimeXamlLoaderConfiguration)
        + LoadGroupSreCore(documents: IReadOnlyCollection<RuntimeXamlLoaderDocument>, configuration: RuntimeXamlLoaderConfiguration)
        + LoadCecil(xaml: string, localAssembly: Assembly, rootInstance: object, uri: Uri, useCompiledBindingsByDefault: bool)
        + InitializeSre()
    }
}

Avalonia.Markup.Xaml.AvaloniaRuntimeXamlLoader ..> Avalonia.Markup.Xaml.XamlIl : using

entity AvaloniaXamlIlRuntimeCompiler_InitializeSre
Avalonia.Markup.Xaml.XamlIl.AvaloniaXamlIlRuntimeCompiler::InitializeSre -[hidden]- AvaloniaXamlIlRuntimeCompiler_InitializeSre
AvaloniaXamlIlRuntimeCompiler_LoadGroupSreCore --> AvaloniaXamlIlRuntimeCompiler_InitializeSre : 调用

note right of AvaloniaXamlIlRuntimeCompiler_InitializeSre
  InitializeSre会进行以下操作：
  - 保证相关程序集GC.KeepAlive
  - 进行初始化：
    - 创建 SreTypeSystem
    - 生成动态程序集和模块
    - 配置 XAML 的类型/命名空间映射
    - 生成上下文类型
    - 定义辅助的访问检查 attribute
end note

package Avalonia.Markup.Xaml.XamlIl {
    class SreTypeSystem {
    }
    AvaloniaXamlIlRuntimeCompiler ..> SreTypeSystem : Creates
}
@enduml
